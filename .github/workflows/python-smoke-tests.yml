name: Python Smoke Tests

on:
  push:
    branches:
      - main
  # If you also want PRs (and to use the draft check below), add:
  # pull_request:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

env:
  POETRY_VERSION: 1.8.3

permissions:
  contents: read
  pull-requests: read

jobs:
  python-ci:
    name: Python Smoke Tests
    # NOTE: this `if` only makes sense when `on: pull_request` is enabled
    # Remove it if you only run on push.
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    continue-on-error: false  # or true if you want the whole job not to fail
    env:
      AZURE_AI_SEARCH_API_KEY: ${{ secrets.AZURE_AI_SEARCH_API_KEY }}
      AZURE_AI_SEARCH_URL_ENDPOINT: ${{ secrets.AZURE_AI_SEARCH_URL_ENDPOINT }}
      DEBUG: 1
      GRAPHRAG_API_BASE: ${{ secrets.GRAPHRAG_API_BASE }}
      GRAPHRAG_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GRAPHRAG_API_VERSION: ${{ secrets.GRAPHRAG_API_VERSION }}
      GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME: ${{ secrets.GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME }}
      GRAPHRAG_EMBEDDING_MODEL: ${{ secrets.GRAPHRAG_EMBEDDING_MODEL }}
      GRAPHRAG_EMBEDDING_RPM: 1000
      GRAPHRAG_EMBEDDING_TPM: 225000
      GRAPHRAG_EMBEDDING_TYPE: azure_openai_embedding
      GRAPHRAG_LLM_DEPLOYMENT_NAME: ${{ secrets.GRAPHRAG_LLM_DEPLOYMENT_NAME }}
      GRAPHRAG_LLM_MODEL: ${{ secrets.GRAPHRAG_LLM_MODEL }}
      GRAPHRAG_LLM_RPM: 1000
      GRAPHRAG_LLM_TPM: 200000
      GRAPHRAG_LLM_TYPE: azure_openai_chat

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']

    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement

      - uses: actions/checkout@v4

      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            python:
              - 'graphrag/**/*'
              - 'poetry.lock'
              - 'pyproject.toml'
              - '**/*.py'
              - '**/*.toml'
              - '**/*.ipynb'
              - '.github/workflows/python*.yml'
              - 'tests/smoke/**/*'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        shell: bash
        run: |
          poetry self add setuptools wheel
          poetry run python -m pip install gensim
          poetry install

      - id: measurement-6
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement

      - name: Build
        run: poetry build

      - id: measurement-8
        name: Record Measurement After Build
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Build
          task: get-measurement

      - id: azuright
        name: Install Azurite
        uses: potatoqualitee/azuright@v1.1

      - if: steps.changes.outputs.python == 'true'
        name: Smoke Test
        run: poetry run poe test_smoke
        # If you only want THIS step to be soft-failing:
        # continue-on-error: true

      - id: measurement-11
        name: Record Measurement After Smoke Test
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Smoke Test
          task: get-measurement

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-artifacts-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}-${{ runner.os }}
          path: tests/fixtures/*

      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results

      - name: Save Total Energy Consumption Data
        # NOTE: ensure the producing step actually exposes `data-total-json`
        run: echo '${{ steps.display-measurement.outputs.data-total-json }}' > total_energy_consumption.json

      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
