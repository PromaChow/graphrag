name: Python Integration Tests
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref
    }}
env:
  POETRY_VERSION: 1.8.3
jobs:
  python-ci:
    env:
      DEBUG: 1
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: "python:\n  - 'graphrag/**/*'\n  - 'poetry.lock'\n  - 'pyproject.toml'\n\
            \  - '**/*.py'\n  - '**/*.toml'\n  - '**/*.ipynb'\n  - '.github/workflows/python*.yml'\n\
            \  - 'tests/integration/**/*'\n"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: $POETRY_VERSION
      - name: Install dependencies
        run: 'poetry self add setuptools wheel

          poetry run python -m pip install gensim

          poetry install

          '
        shell: bash
      - id: measurement-6
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - name: Build
        run: 'poetry build

          '
      - id: measurement-8
        name: Record Measurement After Build
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Build
          task: get-measurement
      - id: azuright
        name: Install Azurite
        uses: potatoqualitee/azuright@v1.1
      - if: runner.os == 'Windows'
        name: Install Azure Cosmos DB Emulator
        run: 'Write-Host "Launching Cosmos DB Emulator"

          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"

          Start-CosmosDbEmulator -Timeout 500

          '
      - id: measurement-11
        name: Record Measurement After Install Azure Cosmos DB Emulator
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install Azure Cosmos DB Emulator
          task: get-measurement
      - name: Integration Test
        run: 'poetry run poe test_integration

          '
      - id: measurement-13
        name: Record Measurement After Integration Test
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Integration Test
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        python-version:
          - '3.10'
permissions:
  contents: read
  pull-requests: read
